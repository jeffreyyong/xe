// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/jeffreyyong/xe/client (interfaces: Forex)

// Package mock is a generated GoMock package.
package mock

import (
	gomock "github.com/golang/mock/gomock"
	model "github.com/jeffreyyong/xe/model"
	reflect "reflect"
)

// MockForex is a mock of Forex interface
type MockForex struct {
	ctrl     *gomock.Controller
	recorder *MockForexMockRecorder
}

// MockForexMockRecorder is the mock recorder for MockForex
type MockForexMockRecorder struct {
	mock *MockForex
}

// NewMockForex creates a new mock instance
func NewMockForex(ctrl *gomock.Controller) *MockForex {
	mock := &MockForex{ctrl: ctrl}
	mock.recorder = &MockForexMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockForex) EXPECT() *MockForexMockRecorder {
	return m.recorder
}

// GetHistoricalRates mocks base method
func (m *MockForex) GetHistoricalRates(arg0, arg1, arg2 string) (*model.HistoricalRates, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetHistoricalRates", arg0, arg1, arg2)
	ret0, _ := ret[0].(*model.HistoricalRates)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetHistoricalRates indicates an expected call of GetHistoricalRates
func (mr *MockForexMockRecorder) GetHistoricalRates(arg0, arg1, arg2 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetHistoricalRates", reflect.TypeOf((*MockForex)(nil).GetHistoricalRates), arg0, arg1, arg2)
}

// GetLatestRate mocks base method
func (m *MockForex) GetLatestRate(arg0 string) (*model.LatestRate, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetLatestRate", arg0)
	ret0, _ := ret[0].(*model.LatestRate)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetLatestRate indicates an expected call of GetLatestRate
func (mr *MockForexMockRecorder) GetLatestRate(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetLatestRate", reflect.TypeOf((*MockForex)(nil).GetLatestRate), arg0)
}
